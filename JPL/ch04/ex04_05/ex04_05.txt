(a):抽象クラス
・基本構造は決まっているが、要素の追加方法などの一部の処理が一意に決まらないため

(b):インターフェース
・探索方法が複数考えられる
・他のクラスと合わせて実装されることが予想される

(c):インターフェース
・描画するオブジェクトによってフィールドなどが一意に決まらない
・描画するためのメソッドのシグニチャのみ決まっていれば、グラフィックシステムはそのメソッドのみ呼び出せば描画できる
・型名が〜ableになっている

(d):具象クラス
・実装すべきメソッドが多いので、継承してあらたなアプリケーションを作成する場合を考慮しても
全てのメソッドを一度定義しておく方が拡張しやすい